<sect1 id="reading" xreflabel="reading">
  <title>Reading &sgy; files</title>

<sect2 id="ReadSegy" xreflabel="ReadSegy.m">
  <title>ReadSegy</title>
  <para><varname>ReadSegy.m</varname> can be used to read  files : 
  <programlisting>
    &gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=ReadSegy('data.segy');
    &gt;&gt; wiggle(Data,[],SegyHeader.time,[SegyTraceHeaders.cdp],'VA')
    &gt;&gt; imagesc([SegyTraceHeaders.cdp],[SegyHeader.time],Data)
  </programlisting>
  This will read <filename>data.segy</filename> using the  revision and data sample format specified in the binary  header, and plot the data.
  </para>
  
  <para><varname>Data</varname> is a 2D variable containing the seismic data. [Nsamples*Ntraces];</para>
  
  <para><varname>SegyTraceHeaders</varname>is a structure of size [1,Ntraces] structure containing all the header values from the  traces. Type <varname>SegyTraceHeaders</varname> to see a list of header information. SegyTraceHeaders(9), list all header names and values of trace number 9.</para>
  
  <para>To access an array of trace header values simply us square brackets as :
  <screen>
    cdp=[SegyTraceHeaders.cdp];
    offset=[SegyTraceHeaders.offset];
    ...
  </screen>
  </para>
  
  
  <para><varname>SegyHeader</varname> is a structure containing all the  header values. Typing '&gt;&gt; SegyHeader' will list the names and values of all  header values.</para>
  
  <para>A number of arguments can be given to <filename
  >ReadSegy</filename>, controlling which part of the data set to read, and the format.</para>
  

<!--
  <sect3>
    <title>Read specific trace numbers</title> 
    To read only traces 100:1:100m, and 200:2:300 use
    <screen>
      &gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=ReadSegy(filename,'traces',[101:200,250:2:300]);
    </screen>
  </sect3>
-->
  
  <sect3>
    <title>Read specific trace numbers</title> 
    <para>To read traces 100, 201 and 320 use e.g.</para>
    <screen>
&gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=ReadSegy(filename,'traces',[100 201 320]);
    </screen>
    <para>Use for example <xref linkend="ReadSegyTraceHeaderValue"/> and 'find' to find a list of trace ids (this is equivalent to using the 'minmax' option)</para>
    <screen>
&gt;&gt; cdp=ReadSegyTraceHeaderValue(filename,'key','cdp');
&gt;&gt; traces = find(cdp&gt;100 &amp; cdp&lt;200)
&gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=ReadSegy(filename,'traces',[100 201 320]);
    </screen>
  </sect3>


  
  <sect3>
    <title>Read only every 5th trace</title> 
    <screen>
      &gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=
      ReadSegy(filename,'jump',5);
    </screen>
  </sect3>

  <sect3>
    <title>To read time slice 0.5  &lt; t &lt; 5</title> 
    <screen>
      &gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=ReadSegy(filename,'trange',.5,3);
    </screen>
  </sect3>
  
  <sect3>
    <title>Read only every 5th trace</title> 
    <screen>
      &gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=
      ReadSegy(filename,'jump',5);
    </screen>
  </sect3>
  

  <sect3
><title
>Read data in a CDP header range : 5000cdp5800</title> 
<para
><varname
>cdp</varname> can be changed to any other valid header name</para>
<screen>
&gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=
      ReadSegy(filename,'minmax','cdp'5000,5800);</screen></sect3>

<sect3
><title
>Read only header values</title> 
<para
>In some cases it can be desirable only to read the  header files (file header and traceheaders). This will return an empty <filename
>Data</filename> variable.</para>
<screen
>&gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=
      ReadSegy(filename,'SkipData',1);</screen></sect3>

<sect3
><title
>SEG-Y format revision</title> 
<para
> SEG-Y format revision number can be '0' (1975) or 
  '1' (2002).
  By default the SEG-Y format revision number is read in the 
  binary header, but this can be overruled using :</para>
<screen
>&gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=
      ReadSegy(filename,'revision',0);</screen></sect3>


<sect3
><title
>A specific Data Sample Format</title> 
<para
>One can overrule the Data Sample Format listed in the binary  header, using the 
<varname
>dsf</varname> argument. See <xref linkend="DataSampleFormatSupport"
></xref> for a list of valid and supported values.</para>
<screen
>&gt;&gt; % Rev 0, IBM FLOATING POINT
&gt;&gt;  [Data,SegyTraceHeaders,SegyHeader]=
       ReadSegy(filename,'revision',0,'dsf',1);
&gt;&gt; % Rev 1, IEEE FLOATING POINT
&gt;&gt;  [Data,SegyTraceHeaders,SegyHeader]=
       ReadSegy(filename,'revision',1,'dsf',5);</screen>
<para
>If <varname
>dsf</varname> is set to 5 and <varname
>revision</varname> to 0, a warning message will occur, since data sample format 5 is only defined in revision 1. The revision is then automatically set to 1.</para></sect3>


<sect3
><title
>Force the use of a specific SegyHeader</title> 
<screen
>&gt;&gt; [Data,SegyTraceHeaders,SegyHeader]=
      ReadSegy(filename,'SegyHeader',SegyHeader);</screen></sect3></sect2>

<sect2
id="ReadSegyFast"
xreflabel="ReadSegyFast.m"
><title
>ReadSegyFast</title>
<para
><varname
>ReadSegyFast.m</varname> is a faster implementation of <xref
linkend="ReadSegy"></xref> since no trace header values are read. Thus this function will just return the seismic data and the -header. e.g. :
<programlisting
>&gt;&gt; [Data,SegyHeader]=ReadSegy('data.segy');
&gt;&gt; imagesc(Data)</programlisting>
This will read <filename
>data.segy</filename> using the  revision and data sample format specified in the binary  header, and plot the data.</para>

<sect3
><title
>ReadSegyFast options</title>
<para
>As for <xref linkend="ReadSegy"></xref> the -revision a number of option can be used. <xref linkend="ReadSegyFast"></xref> uses the same convention as <xref linkend="ReadSegy"></xref>
>.</para>
<para
>The data sample format can be chosen using the 'revision' and 'dsf' tags. Also a 'SegyHeader' can be specified.</para>
<para
><xref linkend="ReadSegyFast"></xref> is currently optimized only for reading the whole -file, but the options 'jump' and 'trange' can be used (but will currently not result in faster read times).</para>
<para
>Since the trace header values are not read, the 'minmax' option is not supported.</para></sect3></sect2>




<sect2 id="ReadSegyHeader"
xreflabel="ReadSegyHeader.m"
><title
>ReadSegyHeader</title>
<para
><varname
>ReadSegyHeader.m</varname> reads the Binary Segy Header only. It can be called with the same options as <xref linkend="ReadSegy"></xref></para>

<sect3
><title
>Force using little endian :</title> 
<screen
>&gt;&gt; SegyHeader=ReadSegyHeader(filename,'endian','l');</screen></sect3></sect2>




<sect2
id="ReadSegyTraceHeaderValue"
xreflabel="ReadSegyTraceHeadervalue.m"
><title
>ReadSegyTraceHeaderValue</title>
<para><filename>ReadSegyTraceHeaderValue.m</filename>(<xref linkend="_ReadSegyTraceHeaderValue"></xref>) reads one trace header value into an array. This approach is much faster than to read the whole file</para>

<sect3
><title
>using keyword</title> 
<para
>To read a trace header value by its trace header key (see <xref linkend="secTraceHeaderDef"></xref> for a list of defined keys) use</para>
<screen
>cdp=ReadSegyTraceHeaderValue(filename,'key','cdp');
SourceX=ReadSegyTraceHeaderValue(filename,'key','SourceX');
SourceY=ReadSegyTraceHeaderValue(filename,'key','SourceY');
plot(SourceX,SourceY)</screen>
</sect3>

<sect3><title>using location+type</title> 
<para
>To read a trace header by its position in the trace header using a specific data sample format, use:</para>
<screen
>SourceX=ReadSegyTraceHeaderValue(filename,'pos',70,'precision','int32');</screen>
<para>
Take a look at <xref linkend="_TraceHeaderDef"></xref>, or check the manual at <xref linkend="secTraceHeaderDef"></xref>
to find the position of all trace header values.</para></sect3>
</sect2>

<sect2
id="ReadSegyConstantTraceLength" xreflabel="ReadSegyConstantTraceLength.m"
><title
>ReadSegyConstantTraceLength</title>
<para
>Assuming a constant trace length (which is much more common than not) allows much faster reading of parts of large  file. For example to read trace number 2030, the whole segy data cube must be sequentially read, assuming variable trace length. Assuming constant trace length the trace can be directly (and fast) located in the data cube.</para>
<para
>To read trace 2000 use
<screen
>[Data,SegyTraceHeader,SegyHeader]=ReadSegyConstantTraceLength(filename,'trace',2000);</screen>
To read traces 1-2000 and 2020-2040 use
<screen
>[Data,SegyTraceHeader,SegyHeader]=ReadSegyConstantTraceLength(filename,'trace',[1:2000,2020:2040]);</screen></para>

<sect3
><title
>using keywords</title> 
<para
>Several keywords can be used to efficiently read parts of larger  files.</para>
<para
>To read only the part of a  file with SourceX between 1000-2000 and SourceY between 4000-5000 use :
<screen
>[Data,SegyTraceHeader,SegyHeader]=ReadSegyConstantTraceLength(filename,'minmax','SourceX',1000,2000,'minmax','SourceY',4000,5000]);</screen></para></sect3>
</sect2>




<sect2 id="ReadSu" xreflabel="ReadSu.m">
  <title>ReadSu</title>
  <para><varname>ReadSu.m</varname> works similar to <xref linkend="ReadSegy"></xref> and the same input parameters can be used. A <varname>SuHeader</varname> can optionally be returned, that simple is a mostly empty  file header.</para>
  <para><screen>&gt;&gt; [Data,SuTraceHeaders,SuHeader]=ReadSu(filename);</screen></para>
</sect2>

</sect1>
